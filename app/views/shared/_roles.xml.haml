%n1:hbx_roles
  - if person.authority_member_id.present?
    - member = person.authority_member
  %n1:hbx_role="urn:openhbx:terms:v1:approval_type##{member.hbx_role}"
  - if member.e_person_id.present?
    %n1:e_person_id= member.e_person_id #URI
  - if member.e_concern_role_id.present?
    %n1:e_concern_role_id= member.e_concern_role_id #URI
  - if member.aceds_id.present?
    %n1:aceds_id= member.aceds_id #URI
  - if member.e_pdc_id.present?
    %n1:e_pdc_id= member.e_pdc_id #URI
  - if person.employee_roles.present?
    %n1:employee_sponsored_roles
      - person.employee_roles.each do |enrollee|
        %n1:employee_sponsored_role
          %n1:employer= render 'shared/employer_link_type', employer: enrollee.policy.employer
          %n1:employment_status= "urn:openhbx:terms:v1:employment_status##{enrollee.employment_status_code}"
          - if enrollee.coverage_start.present?
            %n1:eligibility_start_date= enrollee.coverage_start.try(:strftime,"%Y%m%d")
          - if enrollee.coverage_end.present?
            %n1:eligibility_end_date= enrollee.coverage_end.try(:strftime,"%Y%m%d")
          - if false #todo
            %n1:employment_termination_date= enrollee.employment_termination_date.try(:strftime,"%Y%m%d")
  - policies = member.policies
  - if policies.present?
    %n1:policies
      - policies.each do |policy|
        %n1:policy= render 'shared/policy_link_type', policy: policy, member: member
  %n1:is_active= person.is_active
  - unless person.comments.empty?
    = render 'shared/comments', object: person
  = render 'shared/timestamp', record: person