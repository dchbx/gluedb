continue
Policy.where(:kind => "coverall").size
continue
Policy.where(:kind => "coverall").size
continue
Policy.where(:kind => "coverall").size
continue
next
continue
self.kind
continue
self.kind
self
subject.kind
policy_exists?
continue
subject.persist.kind.market
subject.persist.kind
subject.persist
subject.action.market
subject.action.kind.market
subject.action.kind
subject.action
continue
subject.action.kind.market
continue
subject.action.kind.market
subject.action.kind
subject.action
subject
continue
ep = ExternalEvents::ExternalPolicy.new(action.policy_cv, action.existing_plan, action.is_cobra?, market_from_payload: subject.action.kind)
ep = ExternalEvents::ExternalPolicy.new(action.policy_cv, action.existing_plan, action.is_cobra?, market_from_payload: action.kind)
subject.action.kind.market
subject.action.kind
subject.action
enrollment.market
continue
temp = ExternalEvents::ExternalPolicy.new(action.policy_cv, action.existing_plan, action.is_cobra?, market_from_payload: action.kind)
continue
ep.kind
next
enrollment
continue
temp.kind
temp
temp = ExternalEvents::ExternalPolicy.new(action.policy_cv, action.existing_plan, action.is_cobra?, market_from_payload: action.kind)
continue
ep.plan
ep.class
ep
next
continue
ep
ep.kind
ep
next
ExternalEvents::ExternalPolicy.new(action.policy_cv, action.existing_plan, action.is_cobra?, market_from_payload: action.kind)
continue
next
nexy
continue
next
continue
next
action.kind
continue
continie
continue
self.action.kind.class
self.action.kind
self.action
self.init
self
action
continue
term
init
continue
next
continue
action.kind
action.policy_cv
action
continue
ep.persist
ep
next
continue
action.enrollment_event_xml
action.is_cobra?
action.existing_plan
action.policy_cv
action
